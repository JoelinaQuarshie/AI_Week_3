{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "55eb5981-9517-4ffb-8fca-7898a61f6f53",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sample Reviews to Analyze:\n",
      "1. The Samsung Galaxy phone is absolutely amazing! Great camera quality and battery...\n",
      "2. Terrible experience with this Sony headphones. The sound quality is poor and the...\n",
      "3. Apple MacBook Pro is excellent for programming. The M1 chip is incredibly fast. ...\n",
      "4. This Nike running shoe is comfortable but not very durable. Expected better qual...\n",
      "5. Love my new iPad from Apple! Perfect for drawing and note-taking. The Apple Penc...\n",
      "6. Disappointed with this Dell laptop. Too slow and the battery dies quickly. Would...\n",
      "7. The Bose speakers deliver outstanding sound quality. Perfect for home entertainm...\n",
      "8. This Samsung TV has great picture quality but the smart features are annoying an...\n",
      "9. Amazon Echo is very useful for home automation. Alexa responds quickly to comman...\n",
      "10. The Microsoft Surface tablet is good but overpriced. Better alternatives availab...\n",
      "\n",
      "============================================================\n",
      "NLP ANALYSIS REPORT\n",
      "============================================================\n",
      "\n",
      "Total Reviews Analyzed: 10\n",
      "\n",
      "--- SENTIMENT ANALYSIS ---\n",
      "POSITIVE: 8 (80.0%)\n",
      "NEGATIVE: 2 (20.0%)\n",
      "\n",
      "Average Sentiment Score: 0.600\n",
      "\n",
      "--- ENTITY EXTRACTION ---\n",
      "\n",
      "Top Brands Mentioned:\n",
      "  - Samsung: 3 times\n",
      "  - Apple: 3 times\n",
      "  - Samsung Galaxy: 1 times\n",
      "  - Galaxy: 1 times\n",
      "  - Sony: 1 times\n",
      "\n",
      "Top Products Mentioned:\n",
      "  - Samsung Galaxy: 1 times\n",
      "  - Galaxy phone: 1 times\n",
      "  - Sony headphones: 1 times\n",
      "  - M1: 1 times\n",
      "  - Apple MacBook: 1 times\n",
      "\n",
      "--- SAMPLE ANALYSIS ---\n",
      "\n",
      "Positive Review Example:\n",
      "Review: The Samsung Galaxy phone is absolutely amazing! Great camera quality and battery life. Highly recomm...\n",
      "Positive words: amazing, great, quality, recommend\n",
      "Score: 1.000\n",
      "\n",
      "Negative Review Example:\n",
      "Review: Terrible experience with this Sony headphones. The sound quality is poor and they broke after just o...\n",
      "Negative words: terrible, poor\n",
      "Score: -0.333\n",
      "âœ“ Plot saved to: models\\saved_models\\nlp_analysis_visualization.png\n"
     ]
    },
    {
     "data": {
      "image/png": "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795d58+f17x58/T111/r66+/VosWLaxcPdKLp3/PfvzxR0VERCgmJkbt27c363fv3j0VLFhQ8+bNU/Pmzc2ei4mJkSS+7ZBCXmRe65EjR+q7775Tt27ddPz4cd28eVM3btzQnj17lClTJj1+/Fh9+vTRp59+qrJly6ZS5UiKxI7zwYMHNXv2bK1Zs0bffPON6ZtlkhQaGqqJEyfq77//1vr16yU9GcHep08ftW/fXhUqVEjV+jMKQnQAAAAAyOC+/vpr/f333+revbvc3d116tQpvfXWW6pWrZqmTZumQoUKmd6k3759W66urrKxseHGY2ncihUrdPPmTdna2qp79+6m9s8++0zffPONfv75Z1WsWFGnTp3SL7/8om7dujHyHC/k6b99f39/LVmyRJ6envrrr7/0zjvvaNy4cSpVqpQk6dGjR6pSpYo6dOigXr16WbPsV8rTH3L8/fffioyMVIkSJUzHLv7mrgsWLNDChQv1+++/J9hGTEyMbG1tOdenYU8f57t37youLs40kvzUqVOaOHGi9u/frzFjxph9SHrt2jW5ubmZ/S7gv+HOIQAAAACQwYWEhGjVqlVaunSpwsPDVaxYMe3bt0+7d+9W//79df78eVOAkiNHDtnY2Cg2NpZQJQ07e/ashgwZor59+5pu1vjw4UNJ0qRJk/TGG29o/PjxkqRixYqpZ8+epuMKPMvTgeqUKVO0ePFiff/999q/f7+mT5+uTZs2qV+/fjp+/LiMRqPs7e3l4eGhEydOmNZHyno6WB0xYoQaN26sN998U/Xr19eKFSv06NEjU2has2ZN/f333zp9+rTZ37/RaDR9Q4BzfdpkNBpNx/nLL79UvXr1VKVKFb377rvav3+/ihUrpkGDBqly5coaOXKk1q5da1o3T548MhgMMhqNBOjJhBAdAAAAADKQuLi4BG3z589XkyZNtHjxYi1evFjh4eEqXry49u3bp71796pdu3a6evWq2Tq86U5b/h1M5suXT1999ZXKlCmjNWvWSJIcHR31+PFjSU+C88SOIccVlkycOFHHjh0zBarXrl3TuXPnNGnSJFWoUEHr1q1T3759NWHCBJ05c0b9+vXT4cOHJUldu3Y1TQFFIJtyjEajWbA6evRoLViwQCNGjNDp06cVGRmpCRMmaP78+Xr06JGkJ+eFGzdu6ObNm2Z//xyntC/+GI0aNUrTpk1Thw4dNGTIEBmNRrVu3VqrV69WsWLF1LdvX7399tv69NNPFRwcnOg28N8RogPAK2Lnzp0yGAy6e/eutUsBAAApKD5cOXHihKKiokztkyZNUr169bR06VItWbJEN27cUPHixRUcHKysWbPK3d3dWiXjOeLi4kxBiNFoVHR0tBwdHdWwYUMFBATo1q1bqlatmqKjoxUXFyej0aijR49yk0C8sN27d2vp0qUaM2aMTp48KUnKnj27GjVqpPr16+vw4cMaNGiQRo8erc8++0yjRo1ScHCwOnTooNDQUDVu3JhvOqSwEydOmEYWS9KBAwe0ceNGLV26VB988IHOnDmjo0ePytHRUbNnz9Y333yjhw8fysPDQ35+fnrzzTet/ArwoqKjo03/Hx4ervXr12v69Onq3r27OnTooODgYL311lsaMGCALl26pDJlyqhLly767LPPVK1aNStWnrERogNAKrt+/bq6du2q/Pnzy8HBQe7u7qpXr5727duXbPuoUaOG+vXrZ9ZWpUoVhYWFydXVNdn287I6dOig999/39plAACQYa1fv1516tTR6tWr9c8//5jap0yZonfeeUcBAQEKCgrSlStXVKZMGW3dulWZMmVKdBQ7rC/+g5GJEyfqgw8+UI0aNTR37lxdvXpVDRo00Pz583Xx4kX5+PioQYMG6tChg27fvq0FCxZIYnoNPF+1atU0ZMgQ3blzR8OGDdP//vc/2dvbq27dusqZM6d+++03eXt7q02bNpKejG7t2rWrfHx89Nprr5m2wzcdUsasWbNUpkwZBQcHK1OmTDIajXrttdfUu3dvVa9eXcHBwWrRooVmzpyp33//Xba2tpo7d66mTp2qTJkyafz48bK1tTXd6BVp188//6yZM2fq4MGDkp58iHrnzh3lzJlT0v9N27Vy5UplyZJF06ZNkyRVqlRJQ4YM4cOsFESIDgCprHnz5jp69KgWL16sv/76Sxs3blSNGjV0+/btFN2vvb293N3d+ToXAAAZ0L/D72bNmqlKlSqaOnWq1qxZYxakjxkzRra2tpo2bZrpa9/xIWt8WIu04enjOmrUKE2YMEEFChRQyZIlNWzYMA0dOlSHDh1S/fr1NW/ePOXJk0enTp2Sn5+fTp06JTs7O8XExHD9h2eK/z1r06aNOnXqpNu3b2vEiBH6888/ZWdnJ6PRqLNnz+r6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WRgdACAZSXQAAAAAAAAbcHZ2lr+/v/z9/VWxYkUNGzZMZ86c0cWLF3Xq1CmZTCYtWbJEDRo0kIuLi+bPn69Lly7plVdeUcGCBeXm5qby5ctr4cKFVsdt0KCB3njjDb311lvKkyeP/P39NWrUKKs6R48eVb169eTi4qIyZcpo48aNWXjmAPB4IYkOAAAAAABgYzdu3NA333yjYsWKycfHx1I+bNgwvfHGGzp8+LCaNm2q27dvq0qVKlq1apV+//139e7dW507d9aePXusjjd37ly5u7trz549mjhxot5//31LojwxMVEvvvii7O3t9dNPP2nmzJkaNmxYlp4vADxOHGwdAAAAAAAAQE60atUqeXh4SJJu3rypgIAArVq1SnZ2/455HDRokF588UWr/YYOHWp5/frrr2vdunVaunSpatSoYSmvUKGCRo4cKUkqXry4PvnkE23evFnPPvusNm3apMOHD+vUqVMqWLCgJGns2LFq1qxZpp0rADzOSKIDAAAAAADYQMOGDTVjxgxJ0uXLl/XZZ5+pWbNm+vnnny11qlatarWP2WzW+PHjtXjxYv3zzz+KjY1VbGys3N3drepVqFDBaj0gIECRkZGSpMOHD6tQoUKWBLok1apVK0PPDQCeJCTRAQAAAAAAbMDd3V3FihWzrFepUkVeXl768ssv1atXL0udO02aNEkff/yxpkyZovLly8vd3V2DBg1SXFycVT1HR0erdZPJpMTEREmSYRgpYjGZTBlyTgDwJCKJDgAAAAAAkA2YTCbZ2dnp1q1badbZuXOnWrdurU6dOklKmt/86NGjKl269AO3U6ZMGYWHh+vcuXPKnz+/JCksLOzRggeAJxgPFgUAAAAAALCB2NhYnT9/XufPn9fhw4f1+uuv68aNG2rVqlWa+xQrVkwbN27U7t27dfjwYfXp00fnz59/qHYbN26skiVLqkuXLjp06JB27typd99991FPBwCeWCTRAQAAAAAAbGDdunUKCAhQQECAatSoob1792rp0qVq0KBBmvuMGDFClStXVtOmTdWgQQP5+/vrhRdeeKh27ezstGLFCsXGxqp69erq1auXPvjgg0c7GQB4gpmM1CbCAgAAAAAAAAAAjEQHAAAAAAAAACAtJNEBAAAAAAAAAEgDSXQAAAAAAAAAANJAEh0AAAAAAAAAgDSQRAcAAAAAAAAAIA0k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zBm9++67KlCggOUWYSnpVtpOnTqpX79+eumll3T69GlNnDjRMpokWdGiReXq6qpvvvlGpUuXloeHh/Lnz5/qFDYlS5ZU7969NX36dNnZ2alZs2Y6deqURowYocDAQL355pvpOh8AAPB4y507t4YPH6633npLCxYsUKdOnfT555+rWbNmatq0qbp166YCBQro8uXLOnz4sH755RctXbrUsr+9vb26dOmiyZMny9PTUy+++KK8vLzu2aaHh4emT5+url276vLly2rbtq18fX118eJFHTp0SBcvXrQazd6oUSN99tlnioqK0pQpU6zKQ0NDlTt3bqtnF93PDz/8kOro2LZt2z7UuT+IsmXL6pVXXtGkSZNkb2+vZ555Rn/88YcmTZokLy8vq8RzuXLlJElffPGFcuXKJRcXFwUHBz/0tC9p6dGjhyZMmKCOHTvK1dVVHTp0sNr+2muvydXVVXXq1FFAQIDOnz+vcePGycvLy2oQxt2+/vprff755+rYsaOqVasmLy8vnT17Vl999ZX++OMPvffee5a+s62vix7Vyy+/rG+++UbNmzfXwIEDVb16dTk6Ours2bPaunWrWrdubTXI6EE87Of+MNfR77zzjkaPHq1bt27plVdekZeXl/78809FRUUpJCRE3t7eGjFihN555x116dJFr7zyii5duqSQkBC5uLho5MiRNnlPgBzHts81BZDdLV682OjYsaNRvHhxw8PDw3B0dDQKFSpkdO7c2fjzzz9T1F+5cqXRsGFDw9PT03B2djaCgoKMtm3bGps2bbLU6dq1q+Hu7p5i35EjRxp3/1natGmTUalSJcPZ2dmQZHTt2tUwjH+f2H7y5ElL3fr16xtly5ZNcdygoCCjRYsWKcolGf3797cqO3nypNGjRw+jQIEChqOjo5EvXz6jdu3axpgxYyx1kp9Cv3Tp0hT7SjJCQ0MtZZcvXzbatm1reHt7GyaTKcX53enKlSvGmDFjjGeeecYoUKCA4eTkZLi7uxsVK1Y0xowZY8TExKSoP3DgQKNQoUKGo6Oj4evra7Ro0cL466+/LHUuXbpk9O3b1wgICDAcHByMoKAgY/jw4cbt27fv+148zHuSlqCgIMsT6U0mk+Hh4WGULFnS6Ny5s7F+/fpU95FkjBw50rL+9ttvG1WrVjVy585tODs7G0WKFDHefPNNIyoqylInNjbW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YVk/evSoYu6Ymia5o242m+8bw19//aWoqCiNHz/eMvp/3759D30uALIBe3upbdt/XwMAcpQbN27o2LFjlvWTJ0/q4MGDypMnjwoVKqThw4frn3/+0bx58yRJffv21SeffKLBgwfrtddeU1hYmGbNmqWFCxdajjFw4EDVq1dPEyZMUOvWrfXdd99p06ZN2rVrV5af392ywy3D7u7uqfbbX375ZU2bNk2ff/65Xn/9dattH330kRwdHfXSSy+ledzku0Fv3us5TunQs2dPNWjQQKtWrdKPP/6osWPHZujxkbO1rRKo3/+5pgV7whUTa5a9nSlpDvREyZxoyMHepI41CqlN5YL3P1gmebp4PvVrWEyfbT2mC9GxcnG0k72dncyJSSPQ3Zzs1a9hMdUuln2SOzlB4bzu6vl0sGbtOqmjF67L09Up6QvQ+ERF34qTj4ezej4dnCXPtgDwaB7H32ebJ9ETExMVGhqqrl27ysHB5uFkS+XLl9err76q6dOnW8qGDRummjVrqn///nrttdfk7u6uw4cPa+PGjZZ6zzzzjD755BPVrFlTiYmJGjZsmGXUiyT5+vrK1dVV69atU8GCBeXi4iIvL69UYyhUqJCcnJw0ffp09e3bV7///rtGjx6duScOIHO4uEhLl9o6CgCAjezbt89q1HLydIldu3bVnDlzFBERofDwcMv24OBgrVmzRm+++aY+/fRT5c+fX9OmTbNK7tauXVuLFi3S//73P40YMUJFixbV4sWLVaNGjaw7sTRk51uGa9WqpYEDB+q///2v4uLi9MILLyg+Pl7z58/X1KlTNWXKFMsAlv/85z/Knz+/nnnmGRUsWFAREREaM2aM8uXLp1q1amVoXPXr11exYsXUpUsXFStWTPXq1UtRxzCMVB8c6+vrm6FztOPJNOr5cnqqoLdm7zqpvyNvyDAM2dmZVMo/l3o8HWzTBHqy7nWCVdIvlxb+HK69py8rwWzI0cFOtYvm1SvVC5FAt5EaRXzk7+WinX9HKexElGITkr4AbVSqoOqWyJutEm4A7u1x+322edZ606ZNCg8Pt3poJVIaPXq0lixZYlmvUKGCtm/frnfffVd169aVYRgqWrSoOnToYKkzadIkde/eXfXq1VP+/Pk1depU7d+/37LdwcFB06ZN0/vvv6/33ntPdevW1bY7H5R6h3z58mnOnDl65513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e+3CBe5ElWmziIgIRURE2MajoqJ04MABvfDCC7YkemWXWduc67YlJCTooosu0rXXXmtX7grHWGW4+ncYUFFz5szRbbfdposvvlhubm6KjIzU6NGjtXnzZlsdzpXqV95+OdfrflxYden+vi4pb7/UpXu8uo7zxfk4XyrOpZLo99xzT7lvmA0PDz+nZQcHB0sq/utaSEiIrTwzM9P2V9Lg4GCdOnVKWVlZdn99y8zMVM+ePc9pvVWpou21detWHTx4sMS0Q4cOlfgLcWlWr16t3bt3a8GCBeXWjYyMlIeHh/bs2VMjT+bqarMzQkJC1KxZM+3Zs0cSx1hpCgoKNHLkSKWlpek///mPXS/00tT0Y6w0AQEBcnNzK/EX/D9//5wtODi41Pru7u5q3LhxmXUqc4zWROfSXmcsWLBA48eP1yeffKIBAwaUWbdevXrq2rWr7fyszc6nzf6sR48emjt3rm2cY6wkY4zef/99xcbGytPTs8y6dekYqyxX/g4DKqtly5ZauXKljh8/rpycHIWEhOjGG2+09TqTyr6HQdUoa7+U5uzrflStunh/Xxec63dWbbzHq2s4X2oPzhfHXOqZ6AEBAWrdunWZw9k9oSvqzEXon3/ucOrUKa1cudL2hdC5c2d5eHjY1UlPT9f27dtr5JdGRdsrKipK2dnZ+v77723zbtiwQdnZ2RXarpkzZ6pz587q2LFjuXV37NihgoICu/8wa5LqarMzjhw5ogMHDtjag2PM3pkE+p49e7Rs2TJbYqUsNf0YK42np6c6d+5c4udWS5cuddg+UVFRJep/88036tKlizw8PMqsUxOPpco4l/aSinugjxs3TvPmzdPVV19d7nqMMUpNTa1Vx5Ij59pmZ0tJSbFrD46xklauXKkff/yx1HeEnK0uHWOV5crfYcC58vPzU0hIiLKysrRkyRINHz68QvcwqFql7ZfSnH3dj6pVF+/v64Jz/c6qjfd4dQ3nS+3B+VKGanyJaa3y888/m5SUFDNjxgxTv359k5KSYlJSUkxubq6tTkREhPn8889t488884yxWq3m888/N9u2bTM33XSTCQkJMTk5ObY6d955p7nkkkvMsmXLzObNm82VV15pOnbsaE6fPl2t23ehDR482Fx22WVm3bp1Zt26daZDhw5m6NChdnXObi9jjMnOzja+vr7m7bffLrHMH3/80cyY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fNg2PTo6WpMmTdJDDz2kRo0aKTg4WPHx8XbL+O9//6srrrhC3t7eatu2rZYtW2bXu7p58+aSpE6dOslisSg6Otpu/hdeeEEhISFq3LixJk6cqIKCAofxHj58WMuWLdOwYcPsysu7Xpfk8N5BKv6FwMCBAxUQECCr1aq+fftq8+bNdvNbLBb961//0vDhw+Xn56cnnnhChYWFGj9+vJo3by4fHx9FRETo1VdfLRH3+++/b7tfCAkJ0T333COp+HiQpL/+9a+yWCy2cUn697//rc6dO8vb21stWrTQjBkzdPr06TLjycrK0pgxY9SkSRP5+Pjo0ksv1axZs2zzdOjQQcHBwUpMTHTYxgDqFpLoAFCK+vXrq379+vriiy+Un59fah1jjK6++mplZGRo8eLFSk5OVmRkpPr372/X+3rv3r364osvtHDhQi1cuFArV67UM888I0l69dVXFRUVpbi4OKWnpys9PV1hYWGlru/EiRN67bXXNH/+fCUlJWnFihW67rrrtHjxYi1evFhz5szRu+++q08//dQ2z6233qrvvvtO8+fP19atWzVixAgNHjxYe/bssVvuCy+8oDlz5mjVqlXav3+/HnjgAUnSAw88oJEjR9oujtPT09WzZ89zaq+ioiINGTJEa9eu1dy5c7Vz504988wzcnNzkyQlJydr5MiRGjVqlLZt26b4+HhNmzZNCQkJdst5/vnn1b59eyUnJ2vatGnatm2bBg0apOuuu05bt27VggULtGbNGtsFNQAAAJznp59+UlJSkl3P3vfee0+PPPKInnzySe3atUtPPfWUpk2bptmzZ0uSxowZo48++kjGGNs8CxYsUFBQkPr27VtiHeVdl1utVl1++eW2ziBbt261/ZuTkyOp+J1EpS27ItLT09W3b19dfvnl2rRpk5KSknTw4EGNHDnSrt7s2bPl5+enDRs26LnnntNjjz2mpUuXSiq+Vr722mvl6+urDRs26N1339UjjzxiN//3338vSVq2bJnS09P1+eef26YtX75ce/fu1fLlyzV79mwlJCSUuI7+szVr1sjX11dt2rSxlZV3vS6Vfe8gSbm5uRo7dqxWr16t9evX69JLL9VVV11l60R0xvTp0zV8+HBt27ZNt912m4qKinTJJZfo448/1s6dO/Xoo4/qH//4hz7++GPbPG+//bYmTpyoCRMmaNu2bfrqq6/0l7/8RVJx8l4q/uNMenq6bXzJkiW6+eabNWnSJO3cuVPvvPOOEhIS9OSTT5YZz7Rp07Rz5059/fXX2rVrl95++20FBATYzdOtWzetXr3aYRsDqGMMAKBUn376qWnYsKHx9vY2PXv2NFOnTjVbtmyxTf/2229NgwYNzMmTJ+3ma9mypXnnnXeMMcZMnz7d+Pr6mpycHNv0Bx980HTv3t023rdvX3PffffZLWP58uVGksnKyjLGGDNr1iwjyfz444+2OnfccYfx9fU1ubm5trJBgwaZO+64wxhjzI8//mgsFov59ddf7Zbdv39/M3XqVIfLffPNN01QUJBtfOzYsWb48OHn3V5Lliwx9erVM7t37y51/tGjR5uBAwfalT344IOmbdu2tvFmzZqZa6+91q5ObGysmTBhgl3Z6tWrTb169UxeXl65cQMAAODCGTt2rHFzczN+fn7G29vbSDKSzEsvvWSrExYWZubNm2c33+OPP26ioqKMMcZkZmYad3d3s2rVKtv0qKgo8+CDD9rGmzVrZl5++WVjTMWuy6dMmWKGDh1qjDHmlVdeMTfccIOJjIw0ixYtMsYY06pVK/P222+XuV2OromnTZtmYmJi7MoOHDhgJNmuffv27WuuuOIKuzpdu3Y1f//7340xxnz99dfG3d3dpKen26YvXbrUSDKJiYnGGGPS0tKMJJOSklIitmbNmpnTp0/bykaMGGFuvPFGh9vz8ssvmxYtWtiVlXe9XpF7h7OdPn3a+Pv7m3//+9+2Mklm8uTJDuc54+677zbXX3+9bTw0NNQ88sgjDuv/ua3O6N27t3nqqafsyubMmWNCQkLKjOeaa64xt956a5nx/e1vfzPR0dHlbQaAOoKe6ADgwPXXX6/ffvtNX331lQYNGqQVK1YoMjLS1qMjOTlZx44dU+PGjW09sevXr6+0tDTt3bvXtpzw8HD5+/vbxkNCQpSZmVnpeHx9fdWyZUvbeFBQkMLDw1W/fn27sjPL3rx5s4wxatWqlV18K1eutIvv7OWea3zltVdqaqouueQStWrVqtT5d+3apV69etmV9erVS3v27LF7RE2XLl3s6iQnJyshIcFuGwcNGqSioiKlpaVVejsAAABwfvr166fU1FRt2LBB9957rwYNGqR7771XUvFjWQ4cOKDx48fbXb898cQTtmvUJk2aaODAgfrwww8lSWlpaVq3bp3GjBlT6voqcl0eHR2t1atXq6ioSCtXrlR0dLSio6O1cuVKZWRk6IcffjjnnujJyclavny53bpbt24tSXbX3ZdddpndfH++7t69e7fCwsLs3ovUrVu3CsfQrl07ux7j5V3T5+Xlydvb266svOt1qfx7h8zMTN15551q1aqVrFarrFarjh07pv3799st5+xrekn617/+pS5duqhJkyaqX7++3nvvPdt8mZmZ+u2339S/f3+HsZUmOTlZjz32mN2+OfMr4BMnTjiM56677tL8+fN1+eWX66GHHtLatWtLLNvHx8duGQDqNl4sCgBl8Pb21sCBAzVw4EA9+uijuv322zV9+nSNGzdORUVFCgkJKfUZ4RdddJHt89kvpbFYLCoqKqp0LKUtp6xlFxUV2Z79+OcLakl2iffSlmH+9NPZyiirvXx8fMqc1xgji8VSouxsfn5+duNFRUW64447NGnSpBJ1mzZteg5bAQAAgPPh5+dne8zGa6+9pn79+mnGjBl6/PHHbdeq7733nrp3724335+vWceMGaP77rtPr7/+uubNm6d27dqpY8eOpa6vItflffr0UW5urjZv3qzVq1fr8ccfV1hYmJ566ildfvnlCgwMtHu0SWUUFRXpmmuu0bPPPlti2p+fs17WtXtp18KVUdl7joCAAGVlZdmVlXe97mg9f75mHzdunA4dOqRXXnlFzZo1k5eXl6KionTq1Cm7+c6+pv/444/1t7/9TS+++KKioqLk7++v559/Xhs2bKhwbKUpKirSjBkzdN1115WY9uc/Ipwdz5AhQ/Tzzz9r0aJFWrZsmfr376+JEyfqhRdesNX5/fffecEt4EJIogNAJbRt29b2Yp/IyEhlZGTI3d3d7sU1leXp6WnX0/pC6dSpkwoLC5WZmanevXuf83LOJ74/t9dll12mX375RT/88EOpvVvatm2rNWvW2JWtXbtWrVq1KvFHgD+LjIzUjh07bDdqAAAAqFmmT5+uIUOG6K677lJoaKguvvhi/fTTTw57lkvStddeqzvuuENJSUmaN2+eYmNjHdatyHX5meeiv/HGG7JYLGrbtq1CQ0OVkpKihQsXnnMv9DPr/+yzzxQeHi5393NLs7Ru3Vr79+/XwYMHFRQUJOmP53yf4enpKUkX5N6hU6dOysjIUFZWlho2bCip/Ov1ili9erXeeustXXXVVZKkAwcO2L1gtaz5evbsqbvvvttW9ude/P7+/goPD9e3336rfv36lboMDw+PEm0TGRmp3bt3n9O9QpMmTTRu3DiNGzdOvXv31oMPPmiXRN++fXuJl7sCqLt4nAsAlOLIkSO68sorNXfuXG3dulVpaWn65JNP9Nxzz2n48OGSpAEDBigqKkrXXnutlixZon379mnt2rX65z//qU2bNlV4XeHh4dqwYYP27dunw4cPn1Mv9dK0atVKY8aM0S233KLPP/9caWlp2rhxo5599lktXry4UvFt3bpVu3fv1uHDh1VQUFCiTkXaq2/fvurTp4+uv/56LV26VGlpafr666+VlJQkSbr//vv17bff6vHHH9cPP/yg2bNn64033rB7UVFp/v73v2vdunWaOHGiUlNTtWfPHn311Ve2nwwDAADAuaKjo9WuXTs99dRTkqT4+Hg9/fTTevXVV/XDDz9o27ZtmjVrll566SXbPH5+fho+fLimTZumXbt2afTo0Q6XX9Hr8ujoaM2dO1d9+/aVxWJRw4YN1bZtWy1YsKBCydDs7GylpqbaDfv379fEiRP1+++/66abbtL333+vn376Sd98841uu+22Cie8Bw4cqJYtW2rs2LHaunWrvvvuO9uLRc/0UA8MDJSPj4/txaXZ2dkVWnZpOnXqpCZNmui7776zlZV3vV4Rf/nLXzRnzhzt2rVLGzZs0JgxYyrUi/wvf/mLNm3apCVLluiHH37QtGnTSvwRIT4+Xi+++KJee+017dmzR5s3b9brr79um34myX7mjwOS9Oijj+qDDz5QfHy8duzYoV27dmnBggX65z//WWY8jz76qL788kv9+OOP2rFjhxYuXGj3S4UTJ04oOTlZMTExFW4bALUbSXQAKEX9+vXVvXt3vfzyy+rTp4/at2+vadOmKS4uTm+88Yak4ovZxYsXq0+fPrrtttvUqlUrjRo1Svv27bP1HqmIBx54QG5ubmrbtq2aNGlS4nmB52PWrFm65ZZbdP/99ysiIkLDhg3Thg0bFBYWVuFlxMXFKSIiwvZ8wj9faJ9RkfaSpM8++0xdu3bVTTfdpLZt2+qhhx6y3VhERkbq448/1vz589W+fXs9+uijeuyxxzRu3Lgy47vsssu0cuVK7dmzR71791anTp00bdo0u5/OAgAAwLmmTJmi9957TwcOHNDtt9+u//u//1NCQoI6dOigvn37KiEhQc2bN7ebZ8yYMdqyZYt69+5d5mP6Knpd3q9fPxUWFtolzPv27avCwsIK9URfsWKFOnXqZDc8+uijCg0N1XfffafCwkINGjRI7du313333Ser1ap69SqWdnFzc9MXX3yhY8eOqWvXrrr99tttid4zjx1xd3fXa6+9pnfeeUehoaG2zirnws3NTbfddpvtufNnlHW9XhHvv/++srKy1KlTJ8XGxmrSpEkKDAwsd74777xT1113nW688UZ1795dR44cseuVLkljx47VK6+8orfeekvt2rXT0KFDtWfPHtv0F198UUuXLlVYWJg6deokSRo0aJAWLlyopUuXqmvXrurRo4deeuklNWvWrMx4PD09NXXqVF122WXq06eP3NzcNH/+fNv0L7/8Uk2bNj2vX/wCqF0s5lwffAsAAAAAAIAq8d133+mKK67Qjz/+aPcyzwvl4MGDateunZKTk8tNKsNet27dNHny5DJ/IQGgbuGZ6AAAAAAAAE6WmJio+vXr69JLL9WPP/6o++67T7169aqSBLokBQUFaebMmdq/fz9J9ErIzMzUDTfcoJtuusnZoQCoRvREBwAAAAAAcLIPPvhAjz/+uA4cOKCAgAANGDBAL774oho3buzs0ADA5ZFEBwAAAAAAAADAAV4sCgAAAAAAAACAAyTRAQAAAAAAAABwgCQ6AAAAAAAAAAAOkEQHAAAAAAAAAMABkugAAAAAAAAAADhAEh0AAAAAAAAAAAdIogMAAAAAAAAA4ABJdAAAAAAAAAAAHCCJDgAAAAAAAACAA/8Pm9SGjorQ4OIAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 1500x1000 with 4 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- DETAILED RESULTS ---\n",
      "                                                                                                    review                                                 brands                           products sentiment  sentiment_score\n",
      "0  The Samsung Galaxy phone is absolutely amazing! Great camera quality and battery life. Highly recomm...                        Samsung Galaxy, Samsung, Galaxy       Samsung Galaxy, Galaxy phone  POSITIVE         1.000000\n",
      "1  Terrible experience with this Sony headphones. The sound quality is poor and they broke after just o...                                                   Sony                    Sony headphones  NEGATIVE        -0.333333\n",
      "2       Apple MacBook Pro is excellent for programming. The M1 chip is incredibly fast. Worth every penny!                      Apple MacBook Pro, Apple, MacBook     M1, Apple MacBook, MacBook Pro  POSITIVE         1.000000\n",
      "3       This Nike running shoe is comfortable but not very durable. Expected better quality for the price.                                                   Nike                                     POSITIVE         1.000000\n",
      "4     Love my new iPad from Apple! Perfect for drawing and note-taking. The Apple Pencil works flawlessly.                              iPad, Apple, Apple Pencil                       Apple Pencil  POSITIVE         1.000000\n",
      "5          Disappointed with this Dell laptop. Too slow and the battery dies quickly. Would not recommend.                                                   Dell                        Dell laptop  NEGATIVE        -1.000000\n",
      "6     The Bose speakers deliver outstanding sound quality. Perfect for home entertainment. Very satisfied!                                                   Bose                      Bose speakers  POSITIVE         1.000000\n",
      "7                  This Samsung TV has great picture quality but the smart features are annoying and slow.                                                Samsung                         Samsung TV  POSITIVE         0.333333\n",
      "8       Amazon Echo is very useful for home automation. Alexa responds quickly to commands. Great product!                       Amazon Echo, Alexa, Amazon, Echo                        Amazon Echo  POSITIVE         1.000000\n",
      "9  The Microsoft Surface tablet is good but overpriced. Better alternatives available from Apple or Sam...  Microsoft Surface, Apple, Samsung, Microsoft, Surface  Microsoft Surface, Surface tablet  POSITIVE         1.000000\n"
     ]
    }
   ],
   "source": [
    "\"\"\"\n",
    "Task 3: NLP Analysis with spaCy - Fixed Version\n",
    "Named Entity Recognition and Sentiment Analysis on Product Reviews\n",
    "\"\"\"\n",
    "\n",
    "import spacy\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from collections import Counter\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from typing import List, Dict, Tuple\n",
    "import os\n",
    "\n",
    "class ReviewAnalyzer:\n",
    "    \"\"\"\n",
    "    NLP analyzer for product reviews using spaCy\n",
    "    \"\"\"\n",
    "    \n",
    "    def __init__(self):\n",
    "        # Create necessary directories\n",
    "        os.makedirs('models/saved_models', exist_ok=True)\n",
    "        \n",
    "        # Load spaCy model\n",
    "        try:\n",
    "            self.nlp = spacy.load(\"en_core_web_sm\")\n",
    "        except:\n",
    "            import subprocess\n",
    "            subprocess.run([\"python\", \"-m\", \"spacy\", \"download\", \"en_core_web_sm\"])\n",
    "            self.nlp = spacy.load(\"en_core_web_sm\")\n",
    "        \n",
    "        # Define sentiment lexicons for rule-based approach\n",
    "        self.positive_words = {\n",
    "            'excellent', 'amazing', 'wonderful', 'fantastic', 'great', 'good',\n",
    "            'love', 'perfect', 'best', 'awesome', 'outstanding', 'superior',\n",
    "            'recommend', 'satisfied', 'happy', 'pleased', 'impressive', 'quality'\n",
    "        }\n",
    "        \n",
    "        self.negative_words = {\n",
    "            'bad', 'terrible', 'awful', 'horrible', 'poor', 'worst', 'hate',\n",
    "            'disappointed', 'useless', 'waste', 'broken', 'defective', 'cheap',\n",
    "            'annoying', 'frustrating', 'unhappy', 'dissatisfied', 'regret'\n",
    "        }\n",
    "        \n",
    "        # Intensifiers\n",
    "        self.intensifiers = {'very', 'extremely', 'really', 'highly', 'absolutely'}\n",
    "        \n",
    "        # Negations\n",
    "        self.negations = {'not', 'no', 'never', 'neither', 'nor', \"n't\"}\n",
    "    \n",
    "    def get_sample_reviews(self) -> List[str]:\n",
    "        \"\"\"\n",
    "        Create sample product reviews (simulating Amazon reviews)\n",
    "        \"\"\"\n",
    "        reviews = [\n",
    "            \"The Samsung Galaxy phone is absolutely amazing! Great camera quality and battery life. Highly recommend this product.\",\n",
    "            \"Terrible experience with this Sony headphones. The sound quality is poor and they broke after just one week.\",\n",
    "            \"Apple MacBook Pro is excellent for programming. The M1 chip is incredibly fast. Worth every penny!\",\n",
    "            \"This Nike running shoe is comfortable but not very durable. Expected better quality for the price.\",\n",
    "            \"Love my new iPad from Apple! Perfect for drawing and note-taking. The Apple Pencil works flawlessly.\",\n",
    "            \"Disappointed with this Dell laptop. Too slow and the battery dies quickly. Would not recommend.\",\n",
    "            \"The Bose speakers deliver outstanding sound quality. Perfect for home entertainment. Very satisfied!\",\n",
    "            \"This Samsung TV has great picture quality but the smart features are annoying and slow.\",\n",
    "            \"Amazon Echo is very useful for home automation. Alexa responds quickly to commands. Great product!\",\n",
    "            \"The Microsoft Surface tablet is good but overpriced. Better alternatives available from Apple or Samsung.\"\n",
    "        ]\n",
    "        return reviews\n",
    "    \n",
    "    def extract_entities(self, text: str) -> Dict[str, List[str]]:\n",
    "        \"\"\"\n",
    "        Extract named entities from text, focusing on products and brands\n",
    "        \"\"\"\n",
    "        doc = self.nlp(text)\n",
    "        \n",
    "        entities = {\n",
    "            'PRODUCT': [],\n",
    "            'ORG': [],  # Organizations/Brands\n",
    "            'PERSON': [],\n",
    "            'GPE': [],  # Geopolitical entities\n",
    "            'OTHER': []\n",
    "        }\n",
    "        \n",
    "        # Extract standard entities\n",
    "        for ent in doc.ents:\n",
    "            if ent.label_ == 'ORG':\n",
    "                entities['ORG'].append(ent.text)\n",
    "            elif ent.label_ == 'PRODUCT':\n",
    "                entities['PRODUCT'].append(ent.text)\n",
    "            elif ent.label_ == 'PERSON':\n",
    "                entities['PERSON'].append(ent.text)\n",
    "            elif ent.label_ == 'GPE':\n",
    "                entities['GPE'].append(ent.text)\n",
    "            else:\n",
    "                entities['OTHER'].append(f\"{ent.text} ({ent.label_})\")\n",
    "        \n",
    "        # Custom product/brand detection\n",
    "        brands = ['Samsung', 'Apple', 'Sony', 'Dell', 'Microsoft', 'Google', \n",
    "                 'Amazon', 'Nike', 'Bose', 'iPad', 'MacBook', 'Galaxy', 'Echo', 'Surface']\n",
    "        \n",
    "        for token in doc:\n",
    "            if token.text in brands and token.text not in entities['ORG']:\n",
    "                entities['ORG'].append(token.text)\n",
    "        \n",
    "        # Look for product patterns\n",
    "        for i in range(len(doc) - 1):\n",
    "            if doc[i].text in brands:\n",
    "                potential_product = f\"{doc[i].text} {doc[i+1].text}\"\n",
    "                if doc[i+1].pos_ in ['NOUN', 'PROPN'] and potential_product not in entities['PRODUCT']:\n",
    "                    entities['PRODUCT'].append(potential_product)\n",
    "        \n",
    "        return entities\n",
    "    \n",
    "    def analyze_sentiment(self, text: str) -> Tuple[str, float, Dict]:\n",
    "        \"\"\"\n",
    "        Perform rule-based sentiment analysis\n",
    "        \"\"\"\n",
    "        doc = self.nlp(text.lower())\n",
    "        \n",
    "        positive_score = 0\n",
    "        negative_score = 0\n",
    "        found_positive = []\n",
    "        found_negative = []\n",
    "        \n",
    "        for i, token in enumerate(doc):\n",
    "            is_negated = False\n",
    "            if i > 0 and doc[i-1].text in self.negations:\n",
    "                is_negated = True\n",
    "            \n",
    "            intensifier_multiplier = 1.5 if (i > 0 and doc[i-1].text in self.intensifiers) else 1.0\n",
    "            \n",
    "            if token.text in self.positive_words:\n",
    "                if is_negated:\n",
    "                    negative_score += 1 * intensifier_multiplier\n",
    "                    found_negative.append(f\"not {token.text}\")\n",
    "                else:\n",
    "                    positive_score += 1 * intensifier_multiplier\n",
    "                    found_positive.append(token.text)\n",
    "            \n",
    "            elif token.text in self.negative_words:\n",
    "                if is_negated:\n",
    "                    positive_score += 1 * intensifier_multiplier\n",
    "                    found_positive.append(f\"not {token.text}\")\n",
    "                else:\n",
    "                    negative_score += 1 * intensifier_multiplier\n",
    "                    found_negative.append(token.text)\n",
    "        \n",
    "        total_score = positive_score - negative_score\n",
    "        \n",
    "        if total_score > 0:\n",
    "            sentiment = \"POSITIVE\"\n",
    "        elif total_score < 0:\n",
    "            sentiment = \"NEGATIVE\"\n",
    "        else:\n",
    "            sentiment = \"NEUTRAL\"\n",
    "        \n",
    "        if (positive_score + negative_score) > 0:\n",
    "            normalized_score = total_score / (positive_score + negative_score)\n",
    "        else:\n",
    "            normalized_score = 0\n",
    "        \n",
    "        details = {\n",
    "            'positive_words': found_positive,\n",
    "            'negative_words': found_negative,\n",
    "            'positive_score': positive_score,\n",
    "            'negative_score': negative_score,\n",
    "            'total_score': total_score\n",
    "        }\n",
    "        \n",
    "        return sentiment, normalized_score, details\n",
    "    \n",
    "    def analyze_reviews(self, reviews: List[str]) -> pd.DataFrame:\n",
    "        \"\"\"\n",
    "        Analyze multiple reviews and return results as DataFrame\n",
    "        \"\"\"\n",
    "        results = []\n",
    "        \n",
    "        for review in reviews:\n",
    "            entities = self.extract_entities(review)\n",
    "            sentiment, score, details = self.analyze_sentiment(review)\n",
    "            \n",
    "            results.append({\n",
    "                'review': review[:100] + '...' if len(review) > 100 else review,\n",
    "                'full_review': review,\n",
    "                'brands': ', '.join(entities['ORG']),\n",
    "                'products': ', '.join(entities['PRODUCT']),\n",
    "                'sentiment': sentiment,\n",
    "                'sentiment_score': score,\n",
    "                'positive_words': ', '.join(details['positive_words']),\n",
    "                'negative_words': ', '.join(details['negative_words'])\n",
    "            })\n",
    "        \n",
    "        return pd.DataFrame(results)\n",
    "    \n",
    "    def visualize_results(self, df: pd.DataFrame, save_plots: bool = True):\n",
    "        \"\"\"\n",
    "        Visualize NLP analysis results with proper directory handling\n",
    "        \"\"\"\n",
    "        fig, axes = plt.subplots(2, 2, figsize=(15, 10))\n",
    "        \n",
    "        # 1. Sentiment Distribution\n",
    "        sentiment_counts = df['sentiment'].value_counts()\n",
    "        colors_map = {'POSITIVE': 'green', 'NEGATIVE': 'red', 'NEUTRAL': 'gray'}\n",
    "        colors = [colors_map.get(s, 'blue') for s in sentiment_counts.index]\n",
    "        axes[0, 0].bar(sentiment_counts.index, sentiment_counts.values, color=colors)\n",
    "        axes[0, 0].set_title('Sentiment Distribution')\n",
    "        axes[0, 0].set_xlabel('Sentiment')\n",
    "        axes[0, 0].set_ylabel('Count')\n",
    "        \n",
    "        # 2. Top Brands Mentioned\n",
    "        all_brands = []\n",
    "        for brands in df['brands']:\n",
    "            if brands:\n",
    "                all_brands.extend(brands.split(', '))\n",
    "        brand_counts = Counter(all_brands)\n",
    "        \n",
    "        if brand_counts:\n",
    "            top_brands = dict(brand_counts.most_common(5))\n",
    "            axes[0, 1].bar(top_brands.keys(), top_brands.values(), color='skyblue')\n",
    "            axes[0, 1].set_title('Top 5 Brands Mentioned')\n",
    "            axes[0, 1].set_xlabel('Brand')\n",
    "            axes[0, 1].set_ylabel('Frequency')\n",
    "            axes[0, 1].tick_params(axis='x', rotation=45)\n",
    "        else:\n",
    "            axes[0, 1].text(0.5, 0.5, 'No brands found', ha='center', va='center')\n",
    "        \n",
    "        # 3. Sentiment Score Distribution\n",
    "        axes[1, 0].hist(df['sentiment_score'], bins=20, color='purple', alpha=0.7, edgecolor='black')\n",
    "        axes[1, 0].set_title('Sentiment Score Distribution')\n",
    "        axes[1, 0].set_xlabel('Sentiment Score')\n",
    "        axes[1, 0].set_ylabel('Frequency')\n",
    "        axes[1, 0].axvline(x=0, color='red', linestyle='--', label='Neutral')\n",
    "        axes[1, 0].legend()\n",
    "        \n",
    "        # 4. Review Length vs Sentiment\n",
    "        df['review_length'] = df['full_review'].str.len()\n",
    "        for sentiment in df['sentiment'].unique():\n",
    "            subset = df[df['sentiment'] == sentiment]\n",
    "            axes[1, 1].scatter(subset['review_length'], subset['sentiment_score'], \n",
    "                             label=sentiment, alpha=0.6, s=50)\n",
    "        axes[1, 1].set_title('Review Length vs Sentiment Score')\n",
    "        axes[1, 1].set_xlabel('Review Length (characters)')\n",
    "        axes[1, 1].set_ylabel('Sentiment Score')\n",
    "        axes[1, 1].legend()\n",
    "        \n",
    "        plt.tight_layout()\n",
    "        \n",
    "        # Save figure with proper error handling\n",
    "        if save_plots:\n",
    "            try:\n",
    "                # Ensure directory exists\n",
    "                os.makedirs('models/saved_models', exist_ok=True)\n",
    "                filepath = os.path.join('models', 'saved_models', 'nlp_analysis_visualization.png')\n",
    "                plt.savefig(filepath)\n",
    "                print(f\"âœ“ Plot saved to: {filepath}\")\n",
    "            except Exception as e:\n",
    "                print(f\"Warning: Could not save plot: {e}\")\n",
    "                print(\"Displaying plot without saving...\")\n",
    "        \n",
    "        plt.show()\n",
    "    \n",
    "    def generate_report(self, df: pd.DataFrame):\n",
    "        \"\"\"\n",
    "        Generate a summary report of the analysis\n",
    "        \"\"\"\n",
    "        print(\"\\n\" + \"=\"*60)\n",
    "        print(\"NLP ANALYSIS REPORT\")\n",
    "        print(\"=\"*60)\n",
    "        \n",
    "        print(f\"\\nTotal Reviews Analyzed: {len(df)}\")\n",
    "        \n",
    "        print(\"\\n--- SENTIMENT ANALYSIS ---\")\n",
    "        sentiment_dist = df['sentiment'].value_counts()\n",
    "        for sentiment, count in sentiment_dist.items():\n",
    "            percentage = (count / len(df)) * 100\n",
    "            print(f\"{sentiment}: {count} ({percentage:.1f}%)\")\n",
    "        \n",
    "        print(f\"\\nAverage Sentiment Score: {df['sentiment_score'].mean():.3f}\")\n",
    "        \n",
    "        print(\"\\n--- ENTITY EXTRACTION ---\")\n",
    "        \n",
    "        # Brands\n",
    "        all_brands = []\n",
    "        for brands in df['brands']:\n",
    "            if brands:\n",
    "                all_brands.extend(brands.split(', '))\n",
    "        if all_brands:\n",
    "            print(\"\\nTop Brands Mentioned:\")\n",
    "            for brand, count in Counter(all_brands).most_common(5):\n",
    "                print(f\"  - {brand}: {count} times\")\n",
    "        \n",
    "        # Products\n",
    "        all_products = []\n",
    "        for products in df['products']:\n",
    "            if products:\n",
    "                all_products.extend(products.split(', '))\n",
    "        if all_products:\n",
    "            print(\"\\nTop Products Mentioned:\")\n",
    "            for product, count in Counter(all_products).most_common(5):\n",
    "                print(f\"  - {product}: {count} times\")\n",
    "        \n",
    "        print(\"\\n--- SAMPLE ANALYSIS ---\")\n",
    "        print(\"\\nPositive Review Example:\")\n",
    "        positive_reviews = df[df['sentiment'] == 'POSITIVE']\n",
    "        if not positive_reviews.empty:\n",
    "            sample = positive_reviews.iloc[0]\n",
    "            print(f\"Review: {sample['review']}\")\n",
    "            print(f\"Positive words: {sample['positive_words']}\")\n",
    "            print(f\"Score: {sample['sentiment_score']:.3f}\")\n",
    "        \n",
    "        print(\"\\nNegative Review Example:\")\n",
    "        negative_reviews = df[df['sentiment'] == 'NEGATIVE']\n",
    "        if not negative_reviews.empty:\n",
    "            sample = negative_reviews.iloc[0]\n",
    "            print(f\"Review: {sample['review']}\")\n",
    "            print(f\"Negative words: {sample['negative_words']}\")\n",
    "            print(f\"Score: {sample['sentiment_score']:.3f}\")\n",
    "\n",
    "# Main execution\n",
    "if __name__ == \"__main__\":\n",
    "    # Create necessary directories first\n",
    "    os.makedirs('models/saved_models', exist_ok=True)\n",
    "    \n",
    "    # Initialize analyzer\n",
    "    analyzer = ReviewAnalyzer()\n",
    "    \n",
    "    # Get sample reviews\n",
    "    reviews = analyzer.get_sample_reviews()\n",
    "    \n",
    "    print(\"Sample Reviews to Analyze:\")\n",
    "    for i, review in enumerate(reviews, 1):\n",
    "        print(f\"{i}. {review[:80]}...\")\n",
    "    \n",
    "    # Analyze reviews\n",
    "    results_df = analyzer.analyze_reviews(reviews)\n",
    "    \n",
    "    # Generate report\n",
    "    analyzer.generate_report(results_df)\n",
    "    \n",
    "    # Visualize results (with automatic directory creation)\n",
    "    analyzer.visualize_results(results_df)\n",
    "    \n",
    "    # Display detailed results\n",
    "    print(\"\\n--- DETAILED RESULTS ---\")\n",
    "    print(results_df[['review', 'brands', 'products', 'sentiment', 'sentiment_score']].to_string())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9aa35578-e43a-48e9-b9a1-f5df975464c9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
